name: Java CI with Gradle
on:
  pull_request:
    types:
      - closed
    branches:
      - dev

jobs:
  build_api:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5

    # This is wack AF, WTF
    - name: Inject application.yml
      run: |
        echo "spring:" > ./Beanhub.API/src/main/resources/application.yml
        echo "  datasource:" >> ./Beanhub.API/src/main/resources/application.yml
        echo "    url: ${{ secrets.DB_BUILD_URL }}" >> ./Beanhub.API/src/main/resources/application.yml
        echo "    username: ${{ secrets.DB_BUILD_USERNAME }}" >> ./Beanhub.API/src/main/resources/application.yml
        echo "    password: ${{ secrets.DB_BUILD_PASSWORD }}" >> /./Beanhub.API/src/main/resourcesapplication.yml
        echo "    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver" >> ./Beanhub.API/src/main/resources/application.yml

    - name: Build with Gradle Wrapper
      run: |
        cd BeanHub.API
        ./gradlew
        ./gradlew build
    
    - name: login to docker hub
      run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
    
    - name: Build Docker image
      run: |
        cd BeanHub.API
        docker build -t ${{secrets.DOCKER_USERNAME}}/beanstest .
        docker push ${{secrets.DOCKER_USERNAME}}/beanstest:latest
  deploy_api:
    needs: build_api
    runs-on: [aws-ec2]
    steps:
      - name: Pull image from docker
        run: sudo docker pull ${{secrets.DOCKER_USERNAME}}/beanstest:latest
      - name: Delete old container
        run: sudo docker rm -f bean-api-container
      - name: Run container
        run: sudo docker run -d -p 80:8080 --name bean-api-container ${{secrets.DOCKER_USERNAME}}/beanstest:latest